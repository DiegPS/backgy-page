---
import IconCopy from "../components/IconCopy.astro";
import IconPreview from "../components/IconPreview.astro";

const { backgroundTW, backgroundCSS } = Astro.props;
---

<article class="relative min-h-72 w-full overflow-hidden rounded-md">
    <Fragment set:html={backgroundTW} />

  <footer class="absolute right-0 flex gap-1 z-10 mr-1 mt-1">
    <button
      button-preview
      aria-label="Preview Background in this page"
      class="rounded-md p-2 bg-zinc-800 hover:cursor-pointer transition hover:scale-110 "
      value={backgroundTW}
    >
      <IconPreview class="text-zinc-300" />
      <p class="text-zinc-300 text-xs font-semibold right-1 top-0">PW</p>
      
    </button>
    <button
      button-copy-to-css
      value={backgroundCSS}
      aria-label="Copy this background in CSS format"
      class="rounded-md p-2 bg-zinc-800 hover:cursor-pointer transition hover:scale-110 "
    >
    <IconCopy class="text-fuchsia-300" />
    <p class="text-fuchsia-300 text-xs font-semibold  right-1 top-0">CSS</p>
    </button>
    <button
      button-copy-to-tailwind
      value={backgroundTW}
      aria-label="Copy this background in Tailwind format"
      class="rounded-md p-2 bg-zinc-800 hover:cursor-pointer transition hover:scale-110  "
    >
      <IconCopy class="text-blue-300" />
      <p class="text-blue-300 text-xs font-semibold  right-1 top-0">TW</p>
    </button>
  </footer>
</article>
<script>
  const preview = document.querySelectorAll("[button-preview]");

  const copyCSS = document.querySelectorAll("[button-copy-to-css]");

  const copyTW = document.querySelectorAll("[button-copy-to-tailwind]");

  const replace = document.querySelector("[background-to-replace]");

  preview.forEach((button: any) => {
    button.addEventListener("click", () => {
      if (replace) {
        replace.innerHTML = `<div class="fixed left-0 top-0 -z-10 h-full w-full">${button.value}</div>`;
      }
    });
  });
  function copyToClipboardTW(element: any) {
    element.addEventListener("click", () => {
      navigator.clipboard.writeText(`<div class="fixed left-0 top-0 -z-10 h-full w-full">${element.value}</div>`);
      element.classList.add("bg-green-600");
      setTimeout(function() {
        element.classList.remove("bg-green-600");
      }, 1000);
    });
  }
  function copyToClipboardCSS(element: any) {
    element.addEventListener("click", () => {
      navigator.clipboard.writeText(`<div style="position:fixed; z-index: -1; top:0px; left:0px; height:100%; width:100%;">${element.value}</div>`);
      element.classList.add("bg-green-600");
      setTimeout(function() {
        element.classList.remove("bg-green-600");
      }, 1000);
        });
  }
  copyCSS.forEach(copyToClipboardCSS);
  copyTW.forEach(copyToClipboardTW);
</script>
